var BotActions = require('./bot-actions');
var cards = require('./bot-cards');
var Act = require('../../../../lib/bot-core').BaseActions;

/**
 * Demo dialog class to show how the framework works.
 */
class BotDialogs {

    /**
     * Constructor of the class.
     * 
     * @param bot { Object } Microsoft Bot Framework instance.
     */
    constructor(bot) {
        this.bot = bot;
        this.initialize();
    }    

    /**
     * Initialize the dialogs of the bot.
     * This is the core of the bot, where we define the different 
     * conversation states of the bot, the actions performed 
     * inside each state (waterfall), and the relationship between
     * states.
     */
    initializeDialogs() {
        this.bot.buildDialog('/ui-list', [
            "ui-list.text",
            Act.sendList(['wellbe.hero', 'ryok.hero'])
        ]);
        this.bot.buildDialog('/ui-carousel', [
            'carousel.text',
            Act.sendCarousel([cards.wellbeCard, cards.areyouokCard, 
                cards.healthCard])
        ]);
        this.bot.buildDialog('/ui-receipt', [
            BotActions.sendReceipt.bind(this.bot)
        ]);

        this.bot.buildDialog('/natural', [
            "wellbe.hero",
            Act.beginDialog('/naturalroot')
        ])
        this.bot.bot.dialog('/naturalroot', this.bot.luisdialog);
    }

    /**
     * Initialize the matches. These are the reactions to intents raised
     * by the use of LUIS natural language processing. 
     */
    initializeMatches() {
        this.bot.luisdialog.matches('greetings', [
            Act.sendAction.bind(this.bot, [cards.saluteText])
        ]);
        this.bot.luisdialog.matches('weather', [
            BotActions.getWeather.bind(this.bot)
        ]);
        this.bot.luisdialog.matches('start_daily', [
            Act.beginDialogAction.bind(this.bot, '/int-jira')
        ]);
        this.bot.luisdialog.matches('quit', [
            Act.endDialogAction.bind(this.bot)
        ]);
        this.bot.luisdialog.matches('None', [
            Act.sendAction.bind(this.bot, [cards.dontUnderstand])
        ]);
    }

    /**
     * Initialize the global actions, actions that are launched automatically
     * reacting to matches defined as regular expressions.
     */
    initializeActions() {
        this.bot.beginDialogAction('help', '/help', { matches: /^help/i });
        this.bot.beginDialogAction('menu', '/menu', { matches: /^menu/i });
    }

    /**
     * Initialize the bot.
     */
    initialize() {
        this.initializeDialogs();
        this.initializeMatches();
        this.initializeActions();
    }
    
}

module.exports = BotDialogs;
