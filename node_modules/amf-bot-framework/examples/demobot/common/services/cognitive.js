var request = require('request');
var _ = require('lodash');

var CognitiveServices = function() {
    this.visionApiKey = process.env.MS_COMPUTER_VISION_API_KEY;
    this.faceApiKey = process.env.MS_FACE_API_KEY;
    this.emotionApiKey = process.env.MS_EMOTION_API_KEY;
    this.spellCheckApiKey = process.env.MS_SPELL_CHECK_API_KEY;
};

CognitiveServices.prototype.analyzeImage = function(parameters, body, cb) {
    winston.log('cognitive: begin analyze');
    if (!parameters) {
        parameters = {
            visualFeatures: 'Categories,Tags,Description,Faces,'+
              'ImageType,Color,Adult',
            details: 'Celebrities'
        };
    }
    var parameterStr = '';
    for (var name in parameters) {
        if (parameterStr === '') {
            parameterStr = '?';
        } else {
            parameterStr += '&';
        }
        parameterStr += name+'='+parameters[name];
    }
    var options = {
        url: 'https://api.projectoxford.ai/vision/v1.0/analyze'+parameterStr,
        headers: {
            'Content-Type': 'application/json',
            'Ocp-Apim-Subscription-Key': this.visionApiKey
        },
        body: JSON.stringify({ url: body }),
        method: 'POST'
    };
    winston.log(options);
    request(options, function(error, response, body) {
        if (error) {
            return cb(error);
        }
        body = JSON.parse(body);
        return cb(null, body);
    });
};

CognitiveServices.prototype.thumbnailImage = function(width, height, body, cb) {
    var parameterStr = '?width='+width+'&height='+height+'&smartCropping=true';
    var options = {
        url: 'https://api.projectoxford.ai/vision/v1.0/generateThumbnail'+
          parameterStr,
        headers: {
            'Content-Type': 'application/json',
            'Ocp-Apim-Subscription-Key': this.visionApiKey
        },
        body: JSON.stringify({ url: body }),
        encoding: null,
        method: 'POST' 
    };
    request(options, function(error, response, body) {
        if (error) {
            return cb(error);
        }
        winston.log(body);    
        return cb(null, body);
    });
};

CognitiveServices.prototype.faceDetection = function(parameters, body, cb) {
    winston.log('cognitive: begin analyze');
    if (!parameters) {
        parameters = {
            returnFaceAttributes: 'age,gender,headPose,smile,facialHair,'+
              'glasses',
            returnFaceLandmarks: true,
            returnFaceId: true
        };
    }
    var parameterStr = '';
    for (var name in parameters) {
        if (parameterStr === '') {
            parameterStr = '?';
        } else {
            parameterStr += '&';
        }
        parameterStr += name+'='+parameters[name];
    }
    var options = {
        url: 'https://api.projectoxford.ai/face/v1.0/detect'+parameterStr,
        headers: {
            'Content-Type': 'application/json',
            'Ocp-Apim-Subscription-Key': this.faceApiKey
        },
        body: JSON.stringify({ url: body }),
        method: 'POST'
    };
    winston.log(options);
    request(options, function(error, response, body) {
        if (error) {
            return cb(error);
        }
        body = JSON.parse(body);
        return cb(null, body);
    });
};

CognitiveServices.prototype.recognizeEmotions = function(parameters, body, cb) {
    var options = {
        url: 'https://api.projectoxford.ai/emotion/v1.0/recognize',
        headers: {
            'Content-Type': 'application/json',
            'Ocp-Apim-Subscription-Key': this.emotionApiKey
        },
        body: JSON.stringify({ url: body }),
        method: 'POST'
    };
    winston.log(options);
    request(options, function(error, response, body) {
        if (error) {
            return cb(error);
        }
        body = JSON.parse(body);
        return cb(null, body);
    });
};

CognitiveServices.prototype.replace = function(str, tokens) {
    for (var i = 0; i < tokens.flaggedTokens.length; i++) {
        str = str.replace(tokens.flaggedTokens[i].token, 
          tokens.flaggedTokens[i].suggestions[0].suggestion);
    }
    return str;
};

CognitiveServices.prototype.spellCheck = function(parameters, body, cb) {
    var input = body;
    var options = {
        url: 'https://api.cognitive.microsoft.com/bing/v5.0/spellcheck/'+
          '?mode=proof&text='+body,
        headers: {
            'Ocp-Apim-Subscription-Key': this.spellCheckApiKey
        },
        method: 'POST'
    };
    winston.log(options);
    request(options, function(error, response, body) {
        if (error) {
            return cb(error);
        }
        body = JSON.parse(body);
        winston.log('BODY: '+body);
        body = this.replace(input, body);
        winston.log('BODY: '+body);
        return cb(null, body);
    }.bind(this));
};

var instance = new CognitiveServices();

module.exports = instance;