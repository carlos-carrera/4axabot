import builder from 'botbuilder';

/**
 * Renderer for prompt cards.
 */
class PromptRenderer {

  /**
   * Renderer for prompt cards.
   *
   * @constructor
   * @param bot { Object } Parent bot of the renderer.
   */
  constructor(bot) {
    this.bot = bot;
  }

  /**
   * Given the prompt type, returns the correct function of the builder
   * that creates the prompt.
   *
   * @param type { String } Prompt type
   * @returns { Function } Function of the builder to create the prompt.
   */
  getFunction(type) {
    switch (type) {
      case 'text':
        return builder.Prompts.text;
      case 'number':
        return builder.Prompts.number;
      case 'confirm':
        return builder.Prompts.confirm;
      case 'time':
        return builder.Prompts.time;
      case 'attachment':
        return builder.Prompts.attachment;
      default:
        return builder.Prompts.text;
    }
  }

  /**
   * Main render method of the class. Renders the card into Microsoft Bot
   * Framework objects, and send them to the front.
   *
   * @param session { Object } Chat session.
   * @param card { Object } Card instance.
   * @param cb { Function } Callback function.
   */
  render(session, card, cb) {
    this.bot.domain.renderObj(session, card, function(error, card) {
      if (error) {
        return cb(error);
      }
      session.dialogData.lastPrompt = card;
      this.getFunction(card.subtype)(session, card.text);
      return cb(null, card);
    }.bind(this));
  }
}

export default PromptRenderer;
